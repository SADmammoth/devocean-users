{
  "openapi": "3.0.0",
  "info": {
    "title": "DEVocean REST API",
    "description": "React API documentation of DEVocean project",
    "termsOfService": "http://example.com/terms",
    "contact": {
      "name": "Theophilus Omoregbee",
      "url": "http://github.com/theo4u",
      "email": "theo4u@ymail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:1339/"
    }
  ],
  "externalDocs": {
    "url": "https://theoomoregbee.github.io/"
  },
  "tags": [
    {
      "name": "Credentials",
      "description": "Sails blueprint actions for the **Credentials** model"
    },
    {
      "name": "User",
      "description": "Sails blueprint actions for the **User** model"
    },
    {
      "name": "Check data access"
    },
    {
      "name": "Load data access"
    },
    {
      "name": "Features"
    },
    {
      "name": "Roles"
    }
  ],
  "components": {
    "schemas": {
      "credentials": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/credentials-without-required-constraint"
          },
          {
            "required": [
              "login",
              "password"
            ]
          }
        ]
      },
      "credentials-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Credentials**",
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "login": {
            "type": "string",
            "uniqueItems": true
          },
          "password": {
            "type": "string"
          }
        }
      },
      "data": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/data-without-required-constraint"
          },
          {
            "required": [
              "dataModel",
              "dataItems"
            ]
          }
        ]
      },
      "data-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Data**",
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "accessLevel": {
            "type": "string",
            "enum": [
              "view",
              "workWith",
              "manage"
            ]
          },
          "dataModel": {
            "type": "string"
          },
          "dataItems": {},
          "dataGroups": {
            "description": "Array of **datagroup**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/datagroup"
            }
          },
          "users": {
            "description": "JSON dictionary representing the **user** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/user"
              }
            ]
          }
        }
      },
      "datagroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/datagroup-without-required-constraint"
          }
        ]
      },
      "datagroup-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **DataGroup**",
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "users": {
            "description": "Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          },
          "dataItems": {
            "description": "Array of **data**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/data"
            }
          }
        }
      },
      "role": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/role-without-required-constraint"
          },
          {
            "required": [
              "name",
              "features"
            ]
          }
        ]
      },
      "role-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Role**",
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "uniqueItems": true
          },
          "features": {},
          "users": {
            "description": "Array of **user**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "user": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/user-without-required-constraint"
          }
        ]
      },
      "user-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **User**",
        "properties": {
          "id": {
            "type": "string",
            "uniqueItems": true
          },
          "teammateId": {
            "type": "string",
            "uniqueItems": true
          },
          "role": {
            "description": "JSON dictionary representing the **role** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/role"
              }
            ]
          },
          "dataGroups": {
            "description": "Array of **datagroup**'s or array of FK's when creating / updating / not populated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/datagroup"
            }
          },
          "credentials": {
            "description": "JSON dictionary representing the **credentials** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/credentials"
              }
            ]
          },
          "lastRequest": {
            "type": "number",
            "format": "double"
          },
          "invited": {
            "type": "boolean"
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Login",
        "description": "Login credentials.",
        "tags": [
          "Credentials"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register",
        "description": "Register credentials.",
        "tags": [
          "Credentials"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "teammateId": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkToken": {
      "post": {
        "summary": "Check token",
        "tags": [
          "Credentials"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/acceptInvite": {
      "patch": {
        "summary": "Register",
        "description": "Register credentials.",
        "tags": [
          "Credentials"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teammateId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invite": {
      "post": {
        "summary": "Register",
        "description": "Register credentials.",
        "tags": [
          "Credentials"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "teammateId": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/access/data": {
      "get": {
        "summary": "Check data access",
        "tags": [
          "Check data access"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accessSubject",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User or data group id"
          },
          {
            "in": "query",
            "name": "model",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dataItem",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Load data access",
        "tags": [
          "Load data access"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/access/feature": {
      "get": {
        "summary": "Features",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/access/features": {
      "get": {
        "summary": "Features",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "features",
            "required": true,
            "schema": {}
          },
          {
            "in": "query",
            "name": "authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Features",
        "tags": [
          "Features"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/access/features/all": {
      "get": {
        "summary": "Features",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/access/features/max": {
      "get": {
        "summary": "Features",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/access/features/grant": {
      "patch": {
        "summary": "Features",
        "tags": [
          "Features"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "role",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "login",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dev/faker/creds": {
      "post": {
        "summary": "Credentials",
        "description": "Credentials faker.",
        "tags": [
          "Credentials"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "count",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 1,
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All done."
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dev/faker/roles": {
      "post": {
        "summary": "Roles",
        "description": "Roles faker.",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All done."
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{teammateId}/status": {
      "get": {
        "summary": "User",
        "description": "Get user status",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teammateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Wrong request parameters or their format"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Record already exist or ambiguous data provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}